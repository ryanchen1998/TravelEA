# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ~~~~~backend~~~~~~
GET     /api/user/search                controllers.backend.UserController.pagedUsers(p:Int ?= 0, o ?= "asc", f ?= "")

POST    /api/user                       controllers.backend.UserController.addNewUser(request:Request)

POST    /api/login                      controllers.backend.UserController.login(request:Request)

POST    /api/logout                     controllers.backend.UserController.logout(request:Request)

POST    /api/profile                    controllers.backend.ProfileController.addNewProfile(request:Request)

GET     /api/profile/search             controllers.backend.ProfileController.searchProfilesJson(nationalityId:Long ?= 0, gender:String ?= null, minAge:Int ?= 0, maxAge:Int ?= 999, travellerTypeId:Long ?= 0)

GET     /api/profile/:userId            controllers.backend.ProfileController.getProfile(request:Request, userId:Long)

GET     /api/profile                   controllers.backend.ProfileController.getMyProfile(request:Request)

PUT     /api/profile/                   controllers.backend.ProfileController.updateProfile(request:Request)
# admin version PUT     /api/profile/:id                   controllers.backend.ProfileController.updateProfile(request:Request, id:Long)

DELETE  /api/profile/:userId            controllers.backend.ProfileController.deleteProfile(userId:Long)

DELETE  /api/user/:userId               controllers.backend.UserController.deleteUser(userId:Long)

GET     /api/destination/getCountries   controllers.backend.DestinationController.getAllCountries()

GET     /api/profile/getTravellerTypes/ controllers.backend.ProfileController.getAllTravellerTypes()

POST    /api/destination                controllers.backend.DestinationController.addNewDestination(request:Request)

GET     /api/destination                controllers.backend.DestinationController.getAllDestinations()

DELETE  /api/destination/:id            controllers.backend.DestinationController.deleteDestination(id:Long)

GET     /api/destination/:id            controllers.backend.DestinationController.getDestination(id:Long)

GET     /api/destination/search         controllers.backend.DestinationController.getPagedDestinations(p:Int ?= 0,  pSize:Int ?= 10, order ?= "asc", filter ?= "")

POST    /api/trip                       controllers.backend.TripController.insertTrip(request:Request)

PUT     /api/trip                       controllers.backend.TripController.updateTrip(request:Request)

GET     /api/trip/:id                   controllers.backend.TripController.getTrip(id:Long)

GET     /api/trip/getAll                controllers.backend.TripController.getAllUserTrips(request:Request)

DELETE  /api/trip/:id        controllers.backend.TripController.deleteTrip(id:Long)

# ~~~~~~frontend~~~~~~~
# Start page
GET     /                    controllers.frontend.ApplicationController.cover(request:Request)

# signing up
GET     /signUp              controllers.frontend.ProfileController.createProfile(request: Request)

# Home page
GET     /home                controllers.frontend.ApplicationController.home(request: Request)

# People page
GET     /people              controllers.frontend.PeopleController.search(request: Request, nationalityId:Long ?= 0, gender:String ?= null, minAge:Int ?= 0, maxAge:Int ?= 999, travellerTypeId:Long ?= 0)

# The Travelea trips page
GET     /trips               controllers.frontend.TripsController.index(request: Request)

# The Travelea create trips page
GET     /trips/create        controllers.frontend.createTripController.index(request: Request)
# POST    /trips                      controllers.frontend.createTripController.save

# The Travelea profile page
GET     /profile             controllers.frontend.ProfileController.index(request: Request)

# The TravelEA destinations page
GET     /destinations        controllers.frontend.DestinationController.index(request: Request)

# Edit profile page
GET    /editProfile          controllers.frontend.ProfileController.editindex(request: Request)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

