# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ~~~~~backend~~~~~~
GET     /api/user/search                controllers.backend.UserController.pagedUsers(p:Int ?= 0, o ?= "asc", f ?= "")

POST    /api/user                       controllers.backend.UserController.addNewUser(request:Request)

POST    /api/login                      controllers.backend.UserController.login(request:Request)

POST    /api/profile                    controllers.backend.UserController.addNewProfile(request:Request)

GET     /api/profile/:uid               controllers.backend.UserController.getProfile(uid:Long)

POST    /api/profile/:uid               controllers.backend.UserController.updateProfile(request:Request, uid:Long)

DELETE  /api/profile/:uid               controllers.backend.UserController.deleteProfile(uid:Long)

DELETE  /api/user/:uid                  controllers.backend.UserController.deleteUser(uid:Long)

GET     /api/destination/getCountries   controllers.backend.DestinationController.getAllCountries()

+ nocsrf
POST    /api/destination                controllers.backend.DestinationController.addNewDestination(request:Request)

GET     /api/destination                controllers.backend.DestinationController.getAllDestinations()

DELETE  /api/destination/:id            controllers.backend.DestinationController.deleteDestination(id:Long)

GET     /api/destination/:id            controllers.backend.DestinationController.getDestination(id:Long)

GET     /api/destination/search         controllers.backend.DestinationController.getPagedDestinations(p:Int ?= 0,  pSize:Int ?= 10, order ?= "asc", filter ?= "")

POST    /api/trip                       controllers.backend.TripController.insertTrip(request:Request)

PUT     /api/trip                       controllers.backend.TripController.updateTrip(request:Request)

GET     /api/trip/:id                   controllers.backend.TripController.getTrip(id:Long)

GET     /api/trip/getAll/:uid           controllers.backend.TripController.getAllUserTrips(uid:Long)

DELETE  /api/trip/:id                   controllers.backend.TripController.deleteTrip(id:Long)

# ~~~~~~frontend~~~~~~~
# Start page
GET     /                           controllers.frontend.UserController.index(request:Request)

# signing up
POST    /signUp                     controllers.StartController.signUp(request:Request)
GET     /signUp                     controllers.ProfileController.createProfile(request: Request)

# Logging in
POST    /login                      controllers.StartController.login(request: Request)

# Home page
GET     /home                       controllers.ApplicationController.index(request: Request)

# Logging the user out.
GET    /logout                      controllers.ApplicationController.logout()

# People page
GET     /people                     controllers.PeopleController.index(request: Request)

# The Travelea trips page
GET     /trips                      controllers.TripsController.index(request: Request)

# The Travelea create trips page
GET     /trips/create               controllers.createTripController.index(request: Request)
# POST    /trips                      controllers.createTripController.save

# The Travelea profile page
GET     /profile                    controllers.ProfileController.index(request: Request)
POST    /profile                    controllers.ProfileController.createProfile(request: Request)

# The TravelEA destinations page
GET     /destinations               controllers.frontend.DestinationController.index(request: Request)
POST    /destinations               controllers.frontend.DestinationController.createDestination(request: Request)
DELETE  /destinations               controllers.frontend.DestinationController.deleteDestination(request: Request)

GET    /editProfile                 controllers.EditProfileController.index(request: Request)
POST   /editProfile                 controllers.EditProfileController.updateProfile(request: Request)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

