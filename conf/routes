# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# ~~~~~backend~~~~~~
PUT           /api/user/:id/admin                   controllers.backend.AdminController.toggleAdmin(request:Request, id:Long)

GET           /api/user/setid                        controllers.backend.UserController.setId(request:Request)

GET           /api/user/search                       controllers.backend.UserController.userSearch(request:Request, order ?= "asc", filter ?= "")

GET           /api/user/:id                          controllers.backend.UserController.getUser(request:Request, id:Long)

PUT           /api/user/:id/delete                   controllers.backend.UserController.deleteOtherUser(request:Request, id:Long)

PUT           /api/user/delete                       controllers.backend.UserController.deleteUser(request:Request)

POST          /api/user                              controllers.backend.UserController.addNewUser(request:Request)

GET           /api/user/trips/:id                    controllers.backend.TripController.getAllUserTrips(request:Request, id:Long)

POST          /api/login                             controllers.backend.UserController.login(request:Request)

POST          /api/logout                            controllers.backend.UserController.logout(request:Request)

POST          /api/profile                           controllers.backend.ProfileController.addNewProfile(request:Request)

GET           /api/profile                           controllers.backend.ProfileController.getMyProfile(request:Request)

PUT           /api/profile/:id                       controllers.backend.ProfileController.updateProfile(request:Request, id:Long)

GET           /api/profile/search                    controllers.backend.ProfileController.searchProfilesJson(request:Request, nationalityId:Long ?= 0, gender:String ?= null, minAge:Int ?= 0, maxAge:Int ?= 999, travellerTypeId:Long ?= 0)

GET           /api/profile/:userId                   controllers.backend.ProfileController.getProfile(userId:Long)

GET           /api/profile/getTravellerTypes/        controllers.backend.ProfileController.getAllTravellerTypes()

# admin version PUT     /api/profile/:id                   controllers.backend.ProfileController.updateProfile(request:Request, id:Long)

GET           /api/country/getCountries              controllers.backend.CountryController.getAllCountries()

GET           /api/country/getCountry/:id            controllers.backend.CountryController.getCountryById(id: Long)

POST          /api/country                           controllers.backend.CountryController.addCountry(request:Request)

GET           /api/destination/getAllPublic          controllers.backend.DestinationController.getAllPublicDestinations()

POST          /api/destination                       controllers.backend.DestinationController.addNewDestination(request:Request)

GET           /api/user/destination/:id              controllers.backend.DestinationController.getAllDestinations(request:Request, id: Long)

PUT           /api/destination/:id/delete            controllers.backend.DestinationController.deleteDestination(request:Request, id:Long)

GET           /api/destination/search                controllers.backend.DestinationController.getPagedDestinations(p:Int ?= 0,  pSize:Int ?= 10, order ?= "asc", filter ?= "")

GET           /api/destination/:id                   controllers.backend.DestinationController.getDestination(id:Long)

PUT           /api/destination/:id                   controllers.backend.DestinationController.editDestination(request:Request, id:Long)

PUT           /api/destination/:destId/photo/:photoId  controllers.backend.PhotoController.linkPhotoToDest(request:Request, destId:Long, photoId:Long)

DELETE        /api/destination/:destId/photo/:photoId  controllers.backend.PhotoController.deleteLinkPhotoToDest(request:Request, destId:Long, photoId:Long)

GET           /api/destination/:destId/photo         controllers.backend.PhotoController.getDestinationPhotos(request:Request, destId:Long)

PUT           /api/destination/:destId/travellertype/:travellerTypeId/add  controllers.backend.DestinationController.addTravellerType(request:Request, destId:Long, travellerTypeId:Long)

PUT           /api/destination/:destId/travellertype/:travellerTypeId/remove  controllers.backend.DestinationController.removeTravellerType(request:Request, destId:Long, travellerTypeId:Long)

PUT           /api/destination/:destId/travellertype/:travellerTypeId/reject  controllers.backend.DestinationController.rejectTravellerType(request:Request, destId:Long, travellerTypeId:Long)

PUT           /api/destination/makePublic/:id        controllers.backend.DestinationController.makeDestinationPublic(request:Request, id:Long)

POST          /api/trip                              controllers.backend.TripController.insertTrip(request:Request)

PUT           /api/trip                              controllers.backend.TripController.updateTrip(request:Request)

PUT           /api/trip/privacy                      controllers.backend.TripController.updateTripPrivacy(request:Request)

GET           /api/trip                              controllers.backend.TripController.getAllTrips(request:Request)

GET           /api/trip/:id                          controllers.backend.TripController.getTrip(request:Request, id:Long)

PUT           /api/trip/:id/delete                   controllers.backend.TripController.deleteTrip(request:Request, id:Long)

POST          /api/photo                             controllers.backend.PhotoController.upload(request: Request)

PUT           /api/photo/privacy/:id                 controllers.backend.PhotoController.togglePhotoPrivacy(request: Request, id:Long)

GET           /api/photo/:id                         controllers.backend.PhotoController.getAllUserPhotos(request:Request, id:Long)

DELETE        /api/photo/:id                         controllers.backend.PhotoController.deletePhoto(id:Long)

GET           /api/photo/:id/profile                 controllers.backend.PhotoController.getProfilePicture(id:Long)

PUT           /api/photo/:id/profile                 controllers.backend.PhotoController.makePhotoProfile(request:Request, id:Long)

POST          /api/treasurehunt                      controllers.backend.TreasureHuntController.insertTreasureHunt(request:Request)

GET           /api/treasurehunt                      controllers.backend.TreasureHuntController.getAllTreasureHunts(request:Request)

GET           /api/user/:id/treasurehunt             controllers.backend.TreasureHuntController.getAllUserTreasureHunts(request:Request, id:Long)

GET           /api/treasurehunt/:id                  controllers.backend.TreasureHuntController.getTreasureHuntById(request:Request, id:Long)

PUT           /api/treasurehunt/:id                  controllers.backend.TreasureHuntController.updateTreasureHunt(request:Request, id:Long)

DELETE        /api/treasurehunt/:id                  controllers.backend.TreasureHuntController.deleteTreasureHunt(request:Request, id:Long)

# ~~~~~~frontend~~~~~~~
# Start page
GET           /                      controllers.frontend.ApplicationController.cover(request:Request)

# signing up
GET           /signUp                controllers.frontend.ProfileController.createProfile()

# Home page
GET           /home                  controllers.frontend.ApplicationController.home(request: Request)

# People page
GET           /people                controllers.frontend.PeopleController.search(request: Request)

# The Travelea trips page
GET           /trips                 controllers.frontend.TripController.tripIndex(request: Request)

# The Travelea create trips page
GET           /trips/create/:id      controllers.frontend.TripController.createTrip(request: Request, id: Long)

# The Travelea edit trip page
GET           /trips/edit/:id        controllers.frontend.TripController.editTrip(request: Request, id: Long)

# Create new profile
GET           /profile/create        controllers.frontend.ProfileController.createProfileIndex(request: Request)

# The TravelEA destinations page
GET           /destinations          controllers.frontend.DestinationController.index(request: Request)

# Specific destination page
GET           /destinations/:id      controllers.frontend.DestinationController.detailedDestinationIndex(request: Request, id: Long)

# The profile page
GET           /profile/:id           controllers.frontend.ProfileController.index(request: Request, id: Long)

# Admin page
GET           /admin                 controllers.frontend.AdminController.index(request: Request)

# Treasure Hunt page
GET           /treasureHunts         controllers.frontend.TreasureHuntController.index(request: Request)


#~~~~~~~~ Assets ~~~~~~~~~
# Map static resources from the /public folder to the /assets URL path
GET     /assets/routers/admin         controllers.backend.AdminController.adminRoutes(request: Request)

GET     /assets/routers/user          controllers.backend.UserController.userRoutes(request: Request)

GET     /assets/routers/trip          controllers.backend.TripController.tripRoutes(request: Request)

GET     /assets/routers/photo         controllers.backend.PhotoController.photoRoutes(request: Request)

GET     /assets/routers/profile       controllers.backend.ProfileController.profileRoutes(request: Request)

GET     /assets/routers/destination   controllers.backend.DestinationController.destinationRoutes(request: Request)

GET     /assets/routers/country       controllers.backend.CountryController.countryRoutes(request: Request)

GET     /assets/routers/treasureHunt  controllers.backend.TreasureHuntController.treasureHuntRoutes(request: Request)

GET     /assets/*file                 controllers.Assets.at(path="/public", file)

# Static resources (not managed by the Play framework)
GET     /user_content/*file           controllers.backend.PhotoController.getPhotoFromPath(file)


